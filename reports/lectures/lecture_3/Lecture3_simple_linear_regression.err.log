Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
reg.predict(25)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[14], line 1[0m
[0;32m----> 1[0m [43mreg[49m[38;5;241;43m.[39;49m[43mpredict[49m[43m([49m[38;5;241;43m25[39;49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/sklearn/linear_model/_base.py:297[0m, in [0;36mLinearModel.predict[0;34m(self, X)[0m
[1;32m    283[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mpredict[39m([38;5;28mself[39m, X):
[1;32m    284[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m    285[0m [38;5;124;03m    Predict using the linear model.[39;00m
[1;32m    286[0m 
[0;32m   (...)[0m
[1;32m    295[0m [38;5;124;03m        Returns predicted values.[39;00m
[1;32m    296[0m [38;5;124;03m    """[39;00m
[0;32m--> 297[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_decision_function[49m[43m([49m[43mX[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/sklearn/linear_model/_base.py:276[0m, in [0;36mLinearModel._decision_function[0;34m(self, X)[0m
[1;32m    273[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21m_decision_function[39m([38;5;28mself[39m, X):
[1;32m    274[0m     check_is_fitted([38;5;28mself[39m)
[0;32m--> 276[0m     X [38;5;241m=[39m [43mvalidate_data[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mX[49m[43m,[49m[43m [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mcsr[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mcsc[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mcoo[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m[43m [49m[43mreset[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m
[1;32m    277[0m     coef_ [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mcoef_
[1;32m    278[0m     [38;5;28;01mif[39;00m coef_[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m1[39m:

File [0;32m/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/sklearn/utils/validation.py:2944[0m, in [0;36mvalidate_data[0;34m(_estimator, X, y, reset, validate_separately, skip_check_array, **check_params)[0m
[1;32m   2942[0m         out [38;5;241m=[39m X, y
[1;32m   2943[0m [38;5;28;01melif[39;00m [38;5;129;01mnot[39;00m no_val_X [38;5;129;01mand[39;00m no_val_y:
[0;32m-> 2944[0m     out [38;5;241m=[39m [43mcheck_array[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43minput_name[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mX[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mcheck_params[49m[43m)[49m
[1;32m   2945[0m [38;5;28;01melif[39;00m no_val_X [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m no_val_y:
[1;32m   2946[0m     out [38;5;241m=[39m _check_y(y, [38;5;241m*[39m[38;5;241m*[39mcheck_params)

File [0;32m/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/sklearn/utils/validation.py:1070[0m, in [0;36mcheck_array[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_writeable, force_all_finite, ensure_all_finite, ensure_non_negative, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)[0m
[1;32m   1067[0m [38;5;28;01mif[39;00m ensure_2d:
[1;32m   1068[0m     [38;5;66;03m# If input is scalar raise error[39;00m
[1;32m   1069[0m     [38;5;28;01mif[39;00m array[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m0[39m:
[0;32m-> 1070[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1071[0m             [38;5;124m"[39m[38;5;124mExpected 2D array, got scalar array instead:[39m[38;5;130;01m\n[39;00m[38;5;124marray=[39m[38;5;132;01m{}[39;00m[38;5;124m.[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[1;32m   1072[0m             [38;5;124m"[39m[38;5;124mReshape your data either using array.reshape(-1, 1) if [39m[38;5;124m"[39m
[1;32m   1073[0m             [38;5;124m"[39m[38;5;124myour data has a single feature or array.reshape(1, -1) [39m[38;5;124m"[39m
[1;32m   1074[0m             [38;5;124m"[39m[38;5;124mif it contains a single sample.[39m[38;5;124m"[39m[38;5;241m.[39mformat(array)
[1;32m   1075[0m         )
[1;32m   1076[0m     [38;5;66;03m# If input is 1D raise error[39;00m
[1;32m   1077[0m     [38;5;28;01mif[39;00m array[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m1[39m:
[1;32m   1078[0m         [38;5;66;03m# If input is a Series-like object (eg. pandas Series or polars Series)[39;00m

[0;31mValueError[0m: Expected 2D array, got scalar array instead:
array=25.
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.

